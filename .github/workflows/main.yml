# This is a basic workflow to help you get started with Actions

name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "debug" ]
  pull_request:
    branches: [ "debug" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Decode Keystore
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'cert/my_github_action_keystore.jks'
          encodedString: ${{ secrets.KEYSTORE }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out
        uses: actions/checkout@v3.3.0

      # Set Up Java JDK
      - name: Set Up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build with Gradle
      - name: Build debug
        run: ./gradlew assembleDebug
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}


      # Build APK from given path
      - name: Upload
        uses: actions/upload-artifact@v3.1.2
        with:
          name: app-myGitActionsDemo-debug.apk
#          path: app/build/outputs/apk/debug/app-debug.apk
          path: app/build/outputs/apk/debug/myGitActionsDemo/debug/app-myGitActionsDemo-debug.apk
      
      # Sending Push message in Slack
      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: act10ns/slack@v2.0.0
        with:
            status: ${{ job.status }}
            message: 'Push update in Slack from debug branch'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # Send APK on slack
      - name: Slack File Upload
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
#          file_path: app/build/outputs/apk/debug/app-debug.apk
          file_path: app/build/outputs/apk/myGitActionsDemo/debug/app-myGitActionsDemo-debug.apk
          initial_comment: 'Debug APK for MyGitActionDemo'
    
